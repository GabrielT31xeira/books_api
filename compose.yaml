version: '3'

services:
  nginx:
    build:
      context: .
      dockerfile: Dockerfile-nginx
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    ports:
      - "80:80"
    volumes:
      - "./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro"
      - "./:/var/www/html"
    container_name: nginx
    depends_on:
      - php
    networks:
      - books_api

  php:
    build:
      context: .
      dockerfile: Dockerfile-php
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    volumes:
      - "./:/var/www/html"
      - "./env.example:/var/www/html/.env"
    container_name: php
    environment:
      - "DATABASE_URL=postgresql://app:!ChangeMe!@172.19.0.2:5432/app?serverVersion=15&charset=utf8"
      - "APP_ENV=dev"
    command: bash -c "composer install --no-interaction"
    depends_on:
      - database
    networks:
      - books_api

  ###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-15}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    ports:
      - "5432:5432"
    volumes:
      - database_data:/var/lib/postgresql/data:rw
    networks:
      - books_api
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###

networks:
  books_api: